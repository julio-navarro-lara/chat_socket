/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Registro.java
 *
 * Created on 17-abr-2010, 12:03:05
 */

package chat;

import java.io.IOException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.StringTokenizer;
import java.net.Socket;
import java.io.PrintWriter;
import java.io.BufferedReader;
import java.io.InputStreamReader;

/**
 *
 * @author Julio Navarro Lara
 */
public class Registro extends javax.swing.JFrame {

    Inicio origen;

    String nick;
    String pass1;
    String pass2;
    String email;
    String preguntaSecreta;
    String respuestaSecreta;
    String ip;

    Socket socket;
    PrintWriter out;
    BufferedReader in;

    /** Creates new form Registro */
    public Registro(Inicio origen) {
        this.origen = origen;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nickLabel = new javax.swing.JLabel();
        passLabel = new javax.swing.JLabel();
        pass2Label = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        preguntaLabel = new javax.swing.JLabel();
        nickText = new javax.swing.JTextField();
        pass1Text = new javax.swing.JPasswordField();
        pass2Text = new javax.swing.JPasswordField();
        emailText = new javax.swing.JTextField();
        preguntaText = new javax.swing.JTextField();
        botonRegistrar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        resLabel = new javax.swing.JLabel();
        resText = new javax.swing.JTextField();
        ipLabel = new javax.swing.JLabel();
        ipText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("QSMS - Registro Usuario");

        nickLabel.setText("Nick:");

        passLabel.setText("Password:");

        pass2Label.setText("Repita password:");

        emailLabel.setText("Email:");

        preguntaLabel.setText("Pregunta secreta:");

        nickText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });

        pass1Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });

        pass2Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });

        emailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });

        preguntaText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });

        botonRegistrar.setText("Registrarse");
        botonRegistrar.setActionCommand("jButton1");
        botonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        resLabel.setText("Respuesta secreta:");

        resText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });

        ipLabel.setText("IP servidor:");

        ipText.setText("127.0.0.1");
        ipText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(botonRegistrar)
                        .addGap(29, 29, 29)
                        .addComponent(botonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nickLabel)
                            .addComponent(passLabel)
                            .addComponent(preguntaLabel)
                            .addComponent(pass2Label)
                            .addComponent(emailLabel)
                            .addComponent(resLabel)
                            .addComponent(ipLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nickText, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(pass1Text, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(pass2Text, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(emailText, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(preguntaText, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(resText, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(ipText, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nickLabel)
                    .addComponent(nickText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passLabel)
                    .addComponent(pass1Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pass2Label)
                    .addComponent(pass2Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel)
                    .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(preguntaLabel)
                    .addComponent(preguntaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ipLabel)
                    .addComponent(ipText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonRegistrar)
                    .addComponent(botonCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        origen.cerrarRegistro();
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void botonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarActionPerformed
        botonCancelar.setEnabled(false);
        botonRegistrar.setEnabled(false);

        nick = nickText.getText();
        pass1 = new String(pass1Text.getPassword());
        pass2 = new String(pass2Text.getPassword());
        email = emailText.getText();
        preguntaSecreta = preguntaText.getText();
        respuestaSecreta = resText.getText();
        ip = ipText.getText();
        
        if(nick.isEmpty()||pass1.isEmpty()||pass2.isEmpty()||email.isEmpty()
                ||preguntaSecreta.isEmpty()||respuestaSecreta.isEmpty()||ip.isEmpty()){
            JOptionPane.showMessageDialog(this, "Deben rellenarse todos los campos",
                    "Error", JOptionPane.ERROR_MESSAGE);
            botonCancelar.setEnabled(true);
            botonRegistrar.setEnabled(true);
            return;
        }

        if(nick.equals("DESCONEXION")){
            JOptionPane.showMessageDialog(this, "Este nombre no está permitido",
                    "Error", JOptionPane.ERROR_MESSAGE);
            botonCancelar.setEnabled(true);
            botonRegistrar.setEnabled(true);
            return;
        }

        if(!pass1.equals(pass2)){
            JOptionPane.showMessageDialog(this, "Las contraseñas introducidas no coinciden",
                    "Clave incorrecta", JOptionPane.ERROR_MESSAGE);
            botonCancelar.setEnabled(true);
            botonRegistrar.setEnabled(true);
            return;
        }

        StringTokenizer emailPartes = new StringTokenizer(email,"@");

        if(emailPartes.countTokens()!=2){
            JOptionPane.showMessageDialog(this, "El email introducido no tiene un formato válido",
                    "Email incorrecto", JOptionPane.ERROR_MESSAGE);
            botonCancelar.setEnabled(true);
            botonRegistrar.setEnabled(true);
            return;
        }

        try {
            socket = new Socket(ip, 24);

            out = new PrintWriter(socket.getOutputStream(),true);
            in = new BufferedReader(new InputStreamReader(socket.getInputStream()));

            String mensaje = in.readLine();

            if(!mensaje.equals("CONECTADO")){
                JOptionPane.showMessageDialog(this, "Error en la conexión",
                    "Error", JOptionPane.ERROR_MESSAGE);
                out.close();
                in.close();
                socket.close();
                botonCancelar.setEnabled(true);
                botonRegistrar.setEnabled(true);
            }

            out.println("REGISTRO,"+nick+","+pass1+","+email+","+preguntaSecreta
                    +","+respuestaSecreta);

            mensaje = in.readLine();

            if(mensaje.equals("EXISTE")){
                JOptionPane.showMessageDialog(this, "El nick seleccionado ya existe",
                    "Registro no válido", JOptionPane.ERROR_MESSAGE);
            }else if(mensaje.equals("OK")){
                JOptionPane.showMessageDialog(this, "Registro realizado con éxito",
                    "Usuario registrado", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "Error en la conexión",
                    "Error", JOptionPane.ERROR_MESSAGE);
            }

            out.close();
            in.close();
            socket.close();   

        } catch (UnknownHostException ex) {
            JOptionPane.showMessageDialog(this, "Error en la conexión",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error en la conexión",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }

        botonCancelar.setEnabled(true);
        botonRegistrar.setEnabled(true);
    }//GEN-LAST:event_botonRegistrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonRegistrar;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailText;
    private javax.swing.JLabel ipLabel;
    private javax.swing.JTextField ipText;
    private javax.swing.JLabel nickLabel;
    private javax.swing.JTextField nickText;
    private javax.swing.JPasswordField pass1Text;
    private javax.swing.JLabel pass2Label;
    private javax.swing.JPasswordField pass2Text;
    private javax.swing.JLabel passLabel;
    private javax.swing.JLabel preguntaLabel;
    private javax.swing.JTextField preguntaText;
    private javax.swing.JLabel resLabel;
    private javax.swing.JTextField resText;
    // End of variables declaration//GEN-END:variables

}
